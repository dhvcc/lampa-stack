server {
    listen 80;
    server_name _;

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;

    # Include https proxy config
    include /etc/nginx/conf.d/proxy.conf;

    location /plugins {
        alias /app/plugins;
    }

    location /lampainit.js {
        proxy_pass http://lampac:9118;

        # Include sub_filter prerequisites
        include /etc/nginx/conf.d/sub_filter_config.conf;
        
        # Inject lampa-stack.js code via eval
        sub_filter 'appload() {' 'appload() { fetch("/plugins/lampa-stack.js").then(r=>r.text()).then(eval); fetch("/chii/target.js").then(r=>r.text()).then(eval);';

        # Force proxy tmdb
        sub_filter "    Lampa.Storage.set('proxy_tmdb'," "    Lampa.Storage.set('proxy_tmdb', true);(";
        # Custom plugins
        sub_filter 'var plugins_add = [' 'var plugins_add = [{ url: "https://nb557.github.io/plugins/rating.js", status: 1, name: "Рейтинг КиноПоиск и IMDB", author: "@t_anton", },';
        # Reload plugins if issues
        sub_filter "if (Lampa.Storage.get('lampac_initiale', 'false')) return;" "";
    }

    location /dlna.js {
        proxy_pass http://lampac:9118;

        # Include sub_filter prerequisites
        include /etc/nginx/conf.d/sub_filter_config.conf;
        
        sub_filter '<div class=\\"menu__text\\">DLNA</div>' '<div class=\\"menu__text\\">Скачанные торренты</div>';
        sub_filter "title: 'Загрузить в DLNA'" "title: 'Скачать торрент'";
        sub_filter "title: 'DLNA'" "title: 'Скачанные торренты'";
    }

    location / {
        proxy_pass http://lampac:9118;
    }
}
