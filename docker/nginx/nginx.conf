server {
    listen 80;
    server_name _;

    location /plugins {
        alias /app/plugins;
    }

    location /lampainit.js {
        proxy_pass http://lampac:9118;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Enable sub_filter
        # No encoding to allow sub_filter to work
        proxy_set_header Accept-Encoding "";
        # Enable buffering for sub_filter to work
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Inject lampa-stack.js code via eval
        sub_filter 'appload() {' 'appload() { fetch("/plugins/lampa-stack.js").then(r=>r.text()).then(eval);';
        sub_filter "    Lampa.Storage.set('proxy_tmdb'," "    let country; $.get('https://ipinfo.io', function(response) { country = response.country; }, 'jsonp'); Lampa.Storage.set('proxy_tmdb', ['RU', 'BY'].includes(country));(";
        
        sub_filter_once on;
        sub_filter_types application/javascript;
    }

    location / {
        proxy_pass http://lampac:9118;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }
}
