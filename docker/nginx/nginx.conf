# Load the auth module at the top of http block or server block
lua_package_path "/etc/nginx/lua/?.lua;;";
lua_load_resty_core off;

# Add resolver for all locations
resolver 8.8.8.8 ipv6=off;  # Google's DNS, disable IPv6 for simplicity

# Map lampac-api location header to lampac-api/
map $upstream_http_location $rewritten_location {
    # "~^http://localhost:9118(?<path>/.*)$" "$scheme://$http_host/lampac-api$path";
    # default "$scheme://$http_host/lampac-api$upstream_http_location";
    "~^http://localhost:9118(?<path>/.*)$" "$real_scheme://$http_host/lampac-api$path";
    default "$real_scheme://$http_host/lampac-api$upstream_http_location";
}

server {
    listen 80;
    server_name _;

    # CUB Authentication endpoint
    location /auth/cub {
        access_by_lua_block {
            require("auth").handle_cub_auth()
        }
    }

    # Plugins directory - serve directly from nginx
    location /plugins/ {
        alias /app/plugins/;
        add_header Access-Control-Allow-Origin *;
        add_header Content-Type application/javascript;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # TorrServer
    location /torrserver/ {
        access_by_lua_block {
            require("auth").require_auth()
        }

        proxy_pass http://torrserver:5665/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # qBittorrent
    location /qbittorrent/ {
        access_by_lua_block {
            require("auth").require_auth()
        }

        proxy_pass http://qbittorrent:5666/;
        proxy_http_version 1.1;
        proxy_set_header Host localhost;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location ~ ^/lampac-api/(lite|lifeevents|externalids|storage|proxy|ts) {
        access_by_lua_block {
            require("auth").require_auth()
        }

        # Remove /lampac-api prefix before proxying
        rewrite ^/lampac-api/(.*) /$1 break;
        proxy_pass http://lampac-api:9118;
        proxy_http_version 1.1;
        proxy_set_header Host localhost:9118;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header Origin $scheme://$http_host;
        # proxy_set_header Referer $scheme://$http_host;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header Origin $real_scheme://$http_host;
        proxy_set_header Referer $real_scheme://$http_host;

        # No encoding to allow sub_filter to work
        proxy_set_header Accept-Encoding "";
        # Enable buffering for sub_filter to work
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Replace localhost:9118 in response body and headers
        sub_filter 'http://localhost:9118' '$real_scheme://$http_host/lampac-api';
        sub_filter_types *;
        sub_filter_once off;

        # Handle Location header rewrite (used for torrserver streaming)
        proxy_hide_header Location;
        add_header Location $rewritten_location always;

        # Aggressive no-cache headers
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Replace CORS headers in response
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials 'true' always;

        # Handle preflight
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # TODO: Serve lampa dist files straight from nginx
    # Lampa (default)
    location / {
        proxy_pass http://lampa:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
